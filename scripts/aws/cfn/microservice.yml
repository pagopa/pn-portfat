AWSTemplateFormatVersion: 2010-09-09
Description: 'Example microservice deploy'

Parameters:
  ProjectName:
    Type: String
    Description: 'Usually pn can be pnXYZ where XYZ are the feature number, useful to create
      experimental environments without crash official development environment'

  AlarmSNSTopicArn:
    Type: String
    Description: 'ARN of alarm topic'

  ContainerImageUri:
    Type: String
    Description: 'Exact container image URI with full repository and image digest'

  MicroserviceNumber:
    Type: Number
    Description: 'Disambiguation useful for load balancer rules'

  TemplateBucketBaseUrl:
    Type: String
    Description: 'The S3 bucket from which to fetch the templates used by this stack.'

  ECSClusterName:
    Type: String
    Description: 'The name of the ECS cluster where the microservice is going to be deployed'

  SubnetsIds:
    Type: String
    Description: 'subnets ids comma separated list. Where to deploy the microservice'

  VpcEgressSubnetsIds:
    Type: String
    Description: subnets where to install PN-CORE

  VpcId:
    Type: String
    Description: 'VpcId where the microservice is going to be deployed'

  EcsDefaultSecurityGroup:
    Type: String
    Description: 'Default security group required by infrastructure'

  ApplicationLoadBalancerListenerArn:
    Type: String
    Description: 'Load balancer listener where HTTP endpoints is going to be registered'

  ApplicationLoadBalancerDomain:
    Type: String
    Description: 'Base URL of the load balancer where the service is going to be reachable'

  NetworkLoadBalancerLink:
    Type: String
    Description: 'network load balancer link for API-GW'

  LogsKinesisSourceStreamArn:
    Type: String
    Description: 'Kinesis stream that receive logs'

  Version:
    Type: String
    Description: 'keep track of used projects commitIds'

  # Autoscaling parameters
  AutoscalingCheckPeriod:
    Default: 300
    Type: Number
    Description: 'minimum autoscaling number of tasks'

  AutoscalingDataPointN:
    Default: 1
    Type: Number
    Description: 'activate when N datapoint on M'

  AutoscalingDataPointM:
    Default: 1
    Type: Number
    Description: 'activate when N datapoint on M'

  AutoscalingThreshold:
    Default: 1000
    Type: String
    Description: 'activate when default is reached'

  MinTasksNumber:
    Default: 1
    Type: Number
    Description: 'minimum autoscaling number of tasks'

  MaxTasksNumber:
    Default: 6
    Type: Number
    Description: 'maximum autoscaling number of tasks'

  # OpenApi Bucket params
  MicroserviceBucketName:
    Type: String
    Default: 'default-microservice-bucket'
    Description: 'Name of the bucket where the microservice files are copied during deploy'

  MicroserviceBucketBaseKey:
    Type: String
    Default: ''
    Description: 'Base key of the microservice in the s3 bucket'

  # Logging parameters
  WireTapLogActivation:
    Type: String
    Default: false
    Description: 'Activation of wire logs'
    AllowedValues:
      - true
      - false

  # Log group parameters
  EcsLogGroup:
    Type: String
    Description: 'Ecs log group name'

  LogAlarmStrategy:
    Type: String
    Default: 'FATAL'

  # Heath Check parameters
  HealthCheckInterval:
    Description: 'Seconds between two health check'
    Type: Number
    Default: 60

  HealthCheckTimeout:
    Description: 'health check timeout seconds'
    Type: Number
    Default: 5

  HealthyThresholdCount:
    Description: 'The number of consecutive health checks successes required before considering 
      an unhealthy target healthy.'
    Type: Number
    Default: 5

  UnhealthyThresholdCount:
    Description: 'The number of consecutive health check failures required before considering a target unhealthy.'
    Type: Number
    Default: 2

  # Instance parameters
  # 256 (.25 vCPU) - Available memory values: 0.5GB, 1GB, 2GB
  # 512 (.5 vCPU) - Available memory values: 1GB, 2GB, 3GB, 4GB
  # 1024 (1 vCPU) - Available memory values: 2GB, 3GB, 4GB, 5GB, 6GB, 7GB, 8GB
  # 2048 (2 vCPU) - Available memory values: Between 4GB and 16GB in 1GB increments
  # 4096 (4 vCPU) - Available memory values: Between 8GB and 30GB in 1GB increments
  CpuValue:
    Type: Number
    Default: 1024
    Description: 'Fargate virtual CPU quantity 1024 equals one vCPU'

  # 0.5GB, 1GB, 2GB - Available cpu values: 256 (.25 vCPU)
  # 1GB, 2GB, 3GB, 4GB - Available cpu values: 512 (.5 vCPU)
  # 2GB, 3GB, 4GB, 5GB, 6GB, 7GB, 8GB - Available cpu values: 1024 (1 vCPU)
  # Between 4GB and 16GB in 1GB increments - Available cpu values: 2048 (2 vCPU)
  # Between 8GB and 30GB in 1GB increments - Available cpu values: 4096 (4 vCPU)
  MemoryAmount:
    Type: String
    Default: 2GB
    Description: 'memory amount reserved to the task pod.'
    AllowedValues: [ 2GB, 4GB, 6GB, 8GB ]

  AlbSecurityGroup:
    Type: String
    Description: 'Application load balancer security group'

  JavaToolOptions:
    Type: String
    Default: ''
    Description: JavaToolOptions

  # Storage parameters
  PortFatDownloadTableName:
    Type: String
    Description: Name of dynamodb table containing Downloads files

  PortFatDownloadTableArn:
    Type: String
    Description: ARN of dynamodb table containing Downloads files

  PortFatRequestActionsQueueName:
    Type: String
    Description: Name of SQS request actions queue

  PortFatRequestActionsQueueURL:
    Type: String
    Description: URL of SQS request actions queue

  PortFatRequestActionsQueueARN:
    Type: String
    Description: ARN of SQS request actions queue

  PortFatRequestActionsQueueAlarmARN:
    Type: String
    Description: ARN of SQS alarm for request actions queue

  PortFatRequestActionsQueueAgeAlarmARN:
    Type: String
    Description: ARN of SQS age alarm for request actions queue

  PortFatRequestActionsQueueDLQAlarmARN:
    Type: String
    Description: ARN of DLQ age alarm for request actions queue

  PortFatRequestActionsQueueDLQARN:
    Type: String
    Description: ARN of DLQ for request actions queue

  LambdaLogGroup:
    Type: String
    Description: Name of Lambda Log Group

  EventFileReadyLambdaName:
    Type: String
    Description: Name of the EventFileReady lambda function

  BlobStorageBaseUrl:
    Type: String
    Description: URL of Azure blob storage

  SandboxSafeStorageBaseUrl:
    Type: String
    Default: ""
    Description: 'Safe storage base url'

  SafeStorageCxId:
    Type: String
    Default: "pn-portfat-in"
    Description: "Identificativo della connessione di archiviazione sicura"

  InvoicingServiceIPCidrs:
    Type: String
    Description: 'IPs of invoicing service'

  PortFatWafLimit:
    Default: 6000
    Type: Number
    Description: WAF limit

  ApiDnsName:
    Type: String
    Description: "The DNS name used for B2B rest API."

Resources:
  PortFatMicroservice:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/ecs-service.yaml"
      Parameters:
        MicroServiceUniqueName: !Sub "${ProjectName}-portfat"
        CpuValue: !Ref CpuValue
        MemoryAmount: !Ref MemoryAmount

        HealthCheckTimeout: !Ref HealthCheckTimeout
        HealthCheckInterval: !Ref HealthCheckInterval
        HealthyThresholdCount: !Ref HealthyThresholdCount
        UnhealthyThresholdCount: !Ref UnhealthyThresholdCount

        MinTasksNumber: !Ref MinTasksNumber
        MaxTasksNumber: !Ref MaxTasksNumber
        AutoscalingStrategy: SQS
        AutoscalingQueueName: !Ref PortFatRequestActionsQueueName
        AutoscalingThreshold: !Ref AutoscalingThreshold
        AutoscalingCheckPeriod: !Ref AutoscalingCheckPeriod
        AutoscalingDataPointN: !Ref AutoscalingDataPointN
        AutoscalingDataPointM: !Ref AutoscalingDataPointM

        AlarmSNSTopicArn: !Ref AlarmSNSTopicArn
        ContainerImageURI: !Ref ContainerImageUri

        MappedPaths: '/pn-portfat-in/*'
        MicroServiceSecretPrefix: pn-PortFat-Secrets
        ECSClusterName: !Ref ECSClusterName
        Subnets: !Ref VpcEgressSubnetsIds
        VpcId: !Ref VpcId
        AlbSecurityGroup: !Ref AlbSecurityGroup
        EcsDefaultSecurityGroup: !Ref EcsDefaultSecurityGroup
        LoadBalancerListenerArn: !Ref ApplicationLoadBalancerListenerArn
        LoadbalancerRulePriority: !Ref MicroserviceNumber
        CloudwatchLogKinesisStreamArn: !Ref LogsKinesisSourceStreamArn
        EcsLogGroup: !Ref EcsLogGroup
        LogAlarmStrategyV1: !Ref LogAlarmStrategy
        WireTapLogActivation: !Ref WireTapLogActivation
        JavaToolOptions: !Ref JavaToolOptions
        TaskRoleManagedPolicyArn: !Ref PortFatMicroserviceTaskManagedPolicy

        ContainerEnvEntry1: !Sub 'AWS_REGIONCODE=${AWS::Region}'
        ContainerEnvEntry2: !Sub 'PN_PORTFAT_SAFESTORAGEBASEURL=${SandboxSafeStorageBaseUrl}'
        ContainerEnvEntry3: !Sub 'PN_PORTFAT_SAFESTORAGECXID=${SafeStorageCxId}'
        ContainerEnvEntry4: !Sub 'PN_PORTFAT_AWS_SQS_NAME=${PortFatRequestActionsQueueName}'
        ContainerEnvEntry5: !Sub 'PN_PORTFAT_BLOB_STORAGE_BASE_URL=${BlobStorageBaseUrl}'
        ContainerEnvEntry6: !Sub 'PN_PORTFAT_PORTFAT_TABLE_NAME=${PortFatDownloadTableName}'


  PortFatMicroserviceTaskManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sqs:SendMessage
              - sqs:ReceiveMessage
              - sqs:DeleteMessage
              - sqs:GetQueueUrl
              - sqs:GetQueueAttributes
              - sqs:ChangeMessageVisibility
            Resource:
              - !Ref PortFatRequestActionsQueueARN
              - !Ref PortFatRequestActionsQueueDLQARN
          - Effect: Allow
            Action:
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
              - dynamodb:Query
            Resource:
              - !Ref PortFatDownloadTableArn

  PnPortFatAPI:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/api-gw-expose-service-openapi.yaml"
      Parameters:
        MicroServiceUniqueName: !Sub '${ProjectName}-portfat'
        IntendedUsage: CN_BE
        DnsName: !Ref ApiDnsName
        ProjectName: !Ref ProjectName
        ServiceApiPath: 'pn-portfat-in'
        NetworkLoadBalancerLink: !Ref NetworkLoadBalancerLink
        ApplicationLoadBalancerDomain: !Ref ApplicationLoadBalancerDomain
        AlarmSNSTopicArn: !Ref AlarmSNSTopicArn
        CloudwatchLogKinesisStreamArn: !Ref LogsKinesisSourceStreamArn
        OpenApiBucketName: !Ref MicroserviceBucketName
        OpenApiBucketKey: !Sub ${MicroserviceBucketBaseKey}/docs/openapi/aws/api-pn-portfat-in-CN_BE-aws.yaml

  PortFatApiWaf:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/api-gw-waf-acl.yaml"
      Parameters:
        WAFName: !Sub '${ProjectName}-portfat'
        IntendedUsage: CN_BE
        APIGatewayARNs: !GetAtt PnPortFatAPI.Outputs.APIGatewayARN
        Limit: !Ref PortFatWafLimit # disable IP limit based rule
        AllowedCidrs: !Ref InvoicingServiceIPCidrs

  PortFatUsagePlan:
    Type: 'AWS::ApiGateway::UsagePlan'
    Properties:
      UsagePlanName: PORTFAT
      ApiStages:
        - ApiId: !GetAtt PnPortFatAPI.Outputs.RestApiId
          Stage: unique
      Description: Usage Plan for pn-portfat

  PortFatCloudWatchDashboard:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/microservice-cloudwatch-dashboard.yaml"
      Parameters:
        DashboardName: !Sub "${ProjectName}-portfat"
        DynamoDBTableNames: !Join
          - ','
          - - !Ref PortFatDownloadTableName
        RestApiStageArns: !Join
          - ','
          - - !GetAtt PnPortFatAPI.Outputs.RestApiStageArn
        RestApiNames: !Join
          - ','
          - - !GetAtt PnPortFatAPI.Outputs.RestApiName
        AlarmArns: !Join
          - ','
          - - !Ref PortFatRequestActionsQueueAlarmARN
            - !Ref PortFatRequestActionsQueueAgeAlarmARN
            - !Ref PortFatRequestActionsQueueDLQAlarmARN
            - !GetAtt PortFatLambdaAlarms.Outputs.LambdaInvocationErrorLogsMetricAlarm
        LambdaArns: !Join
          - ','
          - - !GetAtt PortFatLambdaFunction.Arn
        QueueArns: !Join
          - ','
          - - !Ref PortFatRequestActionsQueueARN
            - !Ref PortFatRequestActionsQueueDLQARN
        LogGroupsNames: !Join
          - ','
          - - !Ref EcsLogGroup
            - !Ref LambdaLogGroup

  PortFatLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref EventFileReadyLambdaName
      Runtime: nodejs22.x
      Handler: "index.handler"
      Code:
        S3Bucket: !Ref MicroserviceBucketName
        S3Key: !Sub "${MicroserviceBucketBaseKey}/functions_zip/eventFileReady.zip"
      Role: !GetAtt PortFatLambdaRole.Arn
      VpcConfig:
        SecurityGroupIds:
          - !GetAtt PortFatLambdaSecGroup.GroupId
        SubnetIds: !Split
          - ','
          - !Ref SubnetsIds
      Timeout: 30
      MemorySize: 512
      TracingConfig:
        Mode: Active
      Environment:
        Variables:
          PN_PORTFAT_AWS_REGION: !Sub "${AWS::Region}"
          PN_PORTFAT_SQS_QUEUE_NAME: !Ref PortFatRequestActionsQueueName
          PN_PORTFAT_SQS_QUEUE_URL: !Ref PortFatRequestActionsQueueURL

  PortFatLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ProjectName}-portfat-lambda-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess

  PortFatLambdaPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Sub "${ProjectName}-portfat-lambda-policy"
      Roles:
        - !Ref PortFatLambdaRole
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - sqs:SendMessage
              - sqs:ReceiveMessage
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
            Resource:
              - !Ref PortFatRequestActionsQueueARN
              - !Ref PortFatRequestActionsQueueDLQARN
          - Effect: Allow
            Action:
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:Query
            Resource:
              - !Ref PortFatDownloadTableArn

  PortFatLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref PortFatLambdaFunction
      Action: "lambda:InvokeFunction"
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub
        - "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${RestApiId}/*"
        - { RestApiId: !GetAtt PnPortFatAPI.Outputs.RestApiId }


  PortFatLambdaAlarms:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/lambda-alarms.yaml"
      Parameters:
        FunctionName: !Ref PortFatLambdaFunction
        AlarmSNSTopicArn: !Ref AlarmSNSTopicArn

  PortFatLambdaSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub "${EventFileReadyLambdaName}-sec-group"
      VpcId: !Ref VpcId

Outputs:
  Version:
    Value: !Ref Version